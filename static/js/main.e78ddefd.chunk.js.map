{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","setSelectedTodo","selectedTodo","isSlashIcon","id","title","completed","className","cn","type","onClick","TodoList","todos","map","TodoFilter","setFilter","query","setQuery","onChange","e","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userId","useState","user","setUser","loading","setLoading","useEffect","getUser","finally","href","email","name","App","setTodos","filter","length","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e78ddefd.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodo: (value: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const isSlashIcon = () => {\n    if (selectedTodo === null) {\n      return false;\n    }\n\n    if (selectedTodo.id === todo.id) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const { id, title, completed } = todo;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': completed === false,\n            'has-text-success': completed === true,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            setSelectedTodo(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far', {\n                'fa-eye': !isSlashIcon(),\n                'fa-eye-slash': isSlashIcon(),\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ninterface Props {\n  todos: Todo[];\n  setSelectedTodo: (value: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => (\n          <TodoItem\n            todo={todo}\n            setSelectedTodo={setSelectedTodo}\n            selectedTodo={selectedTodo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setFilter: (value: string) => void;\n  query: string;\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setFilter, query, setQuery }) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo;\n  setSelectedTodo: (value: null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const {\n    id,\n    userId,\n    title,\n    completed,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getUser(userId).then(setUser).finally(() => setLoading(false));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && !user && (\n        <Loader />\n      )}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos().then(setTodos).finally(() => setLoading(false));\n  }, []);\n\n  function getFilterTodos() {\n    return todos\n      .filter((todo) => todo.title.toLowerCase().includes(query.toLowerCase()))\n      .filter((todo) => {\n        switch (filter) {\n          case 'active':\n            return todo.completed === false;\n\n          case 'completed':\n            return todo.completed === true;\n\n          default:\n            return todo;\n        }\n      });\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={getFilterTodos()}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}